// all.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

// 1(dop).cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <limits>
using namespace std;



void osn();
void osn2();

void v10_1();
void v10_2();

void v11_1();
void v11_2();

void v12_1();
void v12_2();

int main()
{
	system("chcp 1251");
	setlocale(LC_ALL, "Russian");

	bool work = true;
	int n;
	while (work)
	{
		cout << "\n1. Вариант 9(1)\n2. Вариант 9(2)\n3.Вариант 10(1)\n4. Вариант 10(2)\n5. Вариант 11(1)\n6. Вариант 11(2)\n7. Вариант 12(1)\n8. Вариант 12(2)\n0. Закончить\n(Введите вариант) ";
		cin >> n;
		switch (n)
		{
		case(1):
			osn();
			break;

		case(2):
			osn2();
			break;

		case(3):
			v10_1();
			break;

		case(4):
			v10_2();
			break;
		case(5):
			v11_1();
			break;
		case(6):
			v11_2();
			break;
		case(7):
			v12_1();
			break;
		case(8):
			v12_2();
			break;

		case(0):
			work = false;
			break;

		default:
			break;
		}
	}
}

void osn()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Скопировать из файла FILE1 в файл FILE2 все строки, начинающиеся на букву «С», расположенные между строками с номерами N1 и N2. Определить количество слов в первой строке файла FILE2.\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char l; int p = 0; int sgl = 0, k = 0, a, b;        // буфер для хранения считываемого из файла текста
	ofstream fout("t9.txt"), fout2("b9.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		p++;
		fout << buff;
		fout << "\n";
	}

	// запись строки в файл
	fout.close();
	ifstream fin("t9.txt"), fin2("b9.txt");    // создание объекта fin класса ifstream для чтения  
	cout << "Введите промежуток(от 1 до " << p << "):"; cin >> a; cin >> b;
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else
	{
		for (int i = 0; i < p; i++) {
			char buff[50];
			fin.getline(buff, 50);

			if ((i >= a - 1) && (i <= b - 1) && ((buff[0] == 'C') || (buff[0] == 'c'))) {


				fout2 << buff << "\n";




			} buff[0] = 0;
			// печать строки
		} fin.close();
	}fout2.close();




	if (!fin2.is_open())
		cout << "Файл не может быть открыт!\n";
	else {

		char buff2[50];
		fin2.getline(buff2, 50);
		cout << buff2 << endl;

		while (k < strlen(buff2))
		{
			if (buff[k] != ' ' && (buff2[k + 1] == ' ' || buff[k + 1] == '\0'))
				sgl++;
			k++;
		}
		cout << "Количесво слов в первой строке : " << sgl << endl;
		cout << "----------------------------------------------------------------------------------" << endl;




		fin2.close();
	}
	buff[0] = 0;
	cout << "*************************************************************************************************************************";
}

void osn2()
{
	
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Ввести с клавиатуры строку символов, состоящую из слов, разделенных пробелами, и записать ее в файл. Прочитать из файла данные и вывести на экран порядковый номер слова минимальной длины. Посчитать количество символов в слове.\n ";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char g[] = "aeiouy"; int p; int max = 0, min = 1000, gl = 0, gl2 = 0, i = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t9_2.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
	while (i < 1)
	{
		cin.getline(buff, 512);


		fout << buff;
		fout << "\n";
		i++;
	}

	// запись строки в файл
	fout.close();
	ifstream fin("t9_2.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		char s[100], str[100];


		fin.getline(s, 100);
		for (char* p = strtok(s, " "); p; p = strtok(NULL, " "))
		{
			if (strlen(p) < min)
			{
				min = strlen(p);
				strcpy(str, p);
			}
		}





		cout << "\nСамое короткое слово: " << str << "(" << strlen(str) << ")";

		fin.close();
	}
	cout << "\n*************************************************************************************************************************";
}

void v10_1()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Скопировать из файла FILE1 в файл FILE2 все строки, в которых нет слов, совпадающих с первым словом. Определить количество согласных букв в первой строке  файла FILE2.\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char l; int p=0; int sgl = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t10.txt"), fout2("b10.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		p++;
		fout << buff;
		fout << "\n";
	}
	
	// запись строки в файл
	fout.close();
	ifstream fin("t10.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else
	{
		for (int i = 0; i < p; i++) {
			char buff[50]; char buff_new[50];
			fin >> buff_new;
			
			fin.getline(buff, 50);
			
			if (!strstr(buff, buff_new)) {
				cout << buff_new << buff << endl;
				
				cout << "----------------------------------------------------------------------------------" << endl;
				fout2 << buff_new << "" << buff << "\n";
			}

			buff[0] = 0;
			buff_new[0] = 0;
			// печать строки
		} fin.close();
	}fout2.close();
	ifstream fin2("b10.txt");
	if (!fin2.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		char s[] = ("bcdfghjklmnpqrstvwxz");/* { "b","c","d","f","g","h","j","k","l","m","n","p","q","r","s","t","v","w","x","z" };*/
		char buff2[50];
		fin2.getline(buff2, 50);
		cout << buff2 << endl;
		cout << "----------------------------------------------------------------------------------" << endl;
		for (int i = 0; i < strlen(buff2); ++i)
		{

			for (int j = 0; j < strlen(s); ++j)
			{
				if (buff2[i] == s[j]) sgl++;
			}
		}
		cout << "Согласных букв в строке: " << sgl << endl;

	}
	fin2.close();
}

void v10_2()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Ввести с клавиатуры строку символов, состоящую из слов, разделенных пробелами, и записать ее в файл. Прочитать из файла данные и вывести все слова, которые содержат букву «р».\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char g[] = "aeiouy"; int p; int max = 0, min = 1000, gl = 0, gl2 = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t10_2.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		fout << buff;
		fout << "\n";
	}

	// запись строки в файл
	fout.close();
	ifstream fin("t10_2.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		char s[50];
		while (!fin.eof()) {
			fin >> s;
			for (int x = 0; x < strlen(s); x++)
			{
				if (s[x] == 'p' || s[x] == 'P') cout << s << endl;
			}
			s[0] = 0;
		}




	}
	fin.close();
}

void v11_1()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Скопировать из файла FILE1 в файл FILE2 все строки, которые содержат только одно слово. Найти самое короткое слово в  файле FILE2.\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char l; int z=0; int c = 0, k = 0, min = 1000;        // буфер для хранения считываемого из файла текста
	ofstream fout("t11.txt"), fout2("b11.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		z++;
		fout << buff;
		fout << "\n";
	}
	
	// запись строки в файл
	fout.close();
	ifstream fin("t11.txt"), fin2("b11.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else
	{
		for (int i = 0; i < z; i++) {
			k = 0;
			char buff[50];
			fin.getline(buff, 50);
			
			for (int i = 0; i < strlen(buff); i++) {
				if (buff[i] != ' ' && (buff[i + 1] == ' ' || buff[i + 1] == '\0'))
					k++;
			}
			if (k == 1) {
				cout << buff << endl;
				cout << "----------------------------------------------------------------------------------" << endl;
				fout2 << buff << "\n"; c++;
			}


			buff[0] = 0;

			// печать строки
		} fin.close();
	}fout2.close();




	if (!fin2.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		char s[100], str[100];
		for (int y = 0; y < c; y++) {

			fin2 >> s;
			for (char* p = strtok(s, " "); p; p = strtok(NULL, " "))
			{
				if (strlen(p) < min)
				{
					min = strlen(p);
					strcpy(str, p);
				}
			}



		}cout << "\nСамое короткое слово: " << str;
		fin2.close();
	}
}

void v11_2()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Ввести с клавиатуры две строки символов, состоящих из слов, разделенных пробелами, и записать их в файл. Прочитать из файла данные. Найти самое короткое слово в первой строке и самое длинное во второй строке. Посчитать количество гласных букв в этих словах.\n ";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char g[] = "aeiouy"; int p; int max = 0, min = 1000, gl = 0, gl2 = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t11_2.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;


	std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		fout << buff;
		fout << "\n";
	}

	// запись строки в файл
	fout.close();
	ifstream fin("t11_2.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		char s[100], str[100], s2[100], str2[100];
		for (int y = 0; y <= 2; y++) {
			if (y == 1) {
				fin.getline(s, 100);
				for (char* p = strtok(s, " "); p; p = strtok(NULL, " "))
				{
					if (strlen(p) < min)
					{
						min = strlen(p);
						strcpy(str, p);
					}
				}
				for (int i = 0; i < strlen(str); ++i)
				{
					for (int j = 0; j < strlen(g); ++j)
					{
						if (str[i] == g[j]) gl++;
					}
				}
			}
			if (y == 2) {
				fin.getline(s2, 100);
				for (char* p = strtok(s2, " "); p; p = strtok(NULL, " "))
				{
					if (strlen(p) > max)
					{
						max = strlen(p);
						strcpy(str2, p);
					}
				}
				for (int i = 0; i < strlen(str2); ++i)
				{
					for (int j = 0; j < strlen(g); ++j)
					{
						if (str2[i] == g[j]) gl2++;
					}
				}
			}



		}cout << "\nСамое короткое слово: " << str << "(" << gl << ")";
		cout << "\nСамое длинное слово: " << str2 << "(" << gl2 << ")";
		fin.close();
	}
}

void v12_1()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Скопировать из файла FILE1 в файл FILE2 все строки, в которых есть слова, совпадающие с первым словом. Определить количество согласных букв в последней строке  файла FILE2.\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char l; int p=0; int sgl = 0, k = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t12.txt"), fout2("b12.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		p++;
		fout << buff;
		fout << "\n";
	}
	
	// запись строки в файл
	fout.close();
	ifstream fin("t12.txt"), fin2("b12.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else
	{
		for (int i = 0; i < p; i++) {
			char buff[50]; char buff_new[50];
			fin >> buff_new;
		
			fin.getline(buff, 50);
		
			if (strstr(buff, buff_new)) {
			
				fout2 << buff_new << "" << buff << "\n";
				k++;
			}

			buff[0] = 0;
			buff_new[0] = 0;
			// печать строки
		} fin.close();
	}fout2.close();




	if (!fin2.is_open())
		cout << "Файл не может быть открыт!\n";
	else {
		for (int y = 0; y <= k; y++) {
			char buff2[50];
			if (y == k - 1) {

				char s[] = ("bcdfghjklmnpqrstvwxz");/* { "b","c","d","f","g","h","j","k","l","m","n","p","q","r","s","t","v","w","x","z" };*/

				fin2.getline(buff2, 50);
				cout << buff2 << endl;

				for (int i = 0; i < strlen(buff2); ++i)
				{

					for (int j = 0; j < strlen(s); ++j)
					{
						if (buff2[i] == s[j]) sgl++;
					}
				}
				cout << "Согласных букв в строке: " << sgl << endl;
				cout << "----------------------------------------------------------------------------------" << endl;

			}
			else {
				fin2.getline(buff2, 50); cout << buff2 << endl;
				buff[0] = 0;
			}

		}
		fin2.close();
	}
}

void v12_2()
{
	setlocale(LC_ALL, "rus");
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	cout << "Ввести с клавиатуры строку символов, состоящую из букв, цифр, запятых, точек, знаков + и , и записать ее в файл. Прочитать из файла данные и посчитать и вывести количество запятых.\n";
	cout << "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
	char buff[50]; char l; int p; int k = 0;        // буфер для хранения считываемого из файла текста
	ofstream fout("t12_2.txt");   // создание объекта fout класса ofstream для записи 
	cout << "Введите строки:" << endl;
	std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
	while (true)
	{
		cin.getline(buff, 512);


		if (buff[0] == ';') break;
		fout << buff;
		fout << "\n";
	}

	// запись строки в файл
	fout.close();
	ifstream fin("t12_2.txt");    // создание объекта fin класса ifstream для чтения  
	if (!fin.is_open())
		cout << "Файл не может быть открыт!\n";
	else
	{

		char buff[50]; char buff_new[] = (",");
		fin.getline(buff, 50);
		cout << "----------------------------------------------------------------------------------" << endl;
		for (int b = 0; b < strlen(buff); b++) {
			if (buff[b] == buff_new[0]) {
				k++;
			}
		}
		cout << "Запятых в строке: " << k << endl;
		// печать строки
		fin.close();
	}
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
