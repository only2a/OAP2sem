// 9_1(osn).cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
using namespace std;

void main()
{
    setlocale(LC_ALL, "rus");
    cout << "Скопировать из файла FILE1 в файл FILE2 все строки, начинающиеся на букву «С», расположенные между строками с номерами N1 и N2. Определить количество слов в первой строке файла FILE2.";
    char buff[50]; char l; int p=0; int sgl = 0, k = 0,a,b;        // буфер для хранения считываемого из файла текста
    ofstream fout("t.txt"), fout2("b.txt");   // создание объекта fout класса ofstream для записи 
    cout << "Введите строки:" << endl;
    while (true)
    {
        cin.getline(buff, 512);


        if (buff[0] == ';') break;
        p++;
        fout << buff;
        fout << "\n";
    }
    
    // запись строки в файл
    fout.close();
    ifstream fin("t.txt"), fin2("b.txt");    // создание объекта fin класса ifstream для чтения  
    cout << "Введите промежуток(от 1 до "<<p<<"):"; cin >> a; cin >> b;
    if (!fin.is_open())
        cout << "Файл не может быть открыт!\n";
    else
    {
        for (int i = 0; i < p; i++) {
            char buff[50];
            fin.getline(buff, 50);
           
            if ((i >= a - 1) && (i <= b - 1)&&((buff[0]=='C')||(buff[0]=='c'))) {
                    

                    fout2 << buff << "\n";



                   
            } buff[0] = 0;
                 // печать строки
        } fin.close();
    }fout2.close();




    if (!fin2.is_open())
        cout << "Файл не может быть открыт!\n";
    else {
        
                char buff2[50] ;
                fin2.getline(buff2, 50);
                cout << buff2 << endl;

                while (k < strlen(buff2))
                {
                    if (buff[k] != ' ' && (buff2[k + 1] == ' ' || buff[k + 1] == '\0'))
                        sgl++;
                    k++;
                }
                cout << "Количесво слов в первой строке : " << sgl << endl;
                cout << "----------------------------------------------------------------------------------" << endl;

            
           
        
        fin2.close();
    }
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
