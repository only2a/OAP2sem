// 7_1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <math.h>
using namespace std;

void ttt(double(*funn) (double(*fun0) (double),/*double,*/ double, double), double(*fun1) (double x),/* double e,*/ double a, double b)
{
	funn(fun1, /*e,*/ a, b);
}
double f(double x) {
	return pow(x, 3) + 2*x - 4;
}
double f2(double x) {
	return  pow(x, 2) - 1;
}
double dichotomyMethod(double(*g) (double) /*double e*/, double a, double b) {
	double x, e = 0.0001;
	do
	{
		x = (a + b) / 2.0;
		if (g(x) * g(a) <= 0)
			b = x;
		else
			a = x;
	} while (fabs(a - b) > 2.0 * e);
	cout << (a + b) / 2.0 << endl;
	return (a + b) / 2.0;
}

int main()
{
	setlocale(LC_CTYPE, "Russian");
	double a, b;

	cout << "Введите левую границу интервала (a) "; cin >> a;
	cout << "Введите правую границу интервала (b) "; cin >> b;
	cout << "Корень решения 1го уравнения методом дихотомии:";
	ttt(dichotomyMethod, f, a, b);
	cout << "Корень решения 2го уравнения методом дихотомии:";
	ttt(dichotomyMethod, f2, a, b);
	return(0);
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
