// 2_1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <cstdio>
#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_CTYPE, "Russian");
    int r, c, sum1, sum2;
    FILE* A, * B, * C;
    cout << "Даны два файла вещественных чисел с именами fA и fB, содержащие элементы прямоугольных матриц M1 и M2 по строкам, причем начальный элемент каждого файла содержит количество столбцов соответствующей матрицы. Создать файл той же структуры с именем fC, содержащий сумму M1+M2" << endl;
    cout << "Введите количество строк и столбцов: ";
    cin >> r >> c;
    fopen_s(&A, "A.txt", "w");
    fopen_s(&B, "B.txt", "w");

    for (int i = 0; i < r; i++)
    {
        for (int j = 0; j < c; j++)
        {
            if (i == 0 && j == 0)
            {
                fprintf(A, "%d ", c);
                fprintf(B, "%d ", c);
                fprintf(A, "\n");
                fprintf(B, "\n");
            }
            fprintf(A, "%d ", rand() % 10);
            fprintf(B, "%d ", rand() % 10);
        }
        fprintf(A, "\n");
        fprintf(B, "\n");
    }
    fclose(A);
    fclose(B);

    fopen_s(&A, "A.txt", "r");
    fopen_s(&B, "B.txt", "r");
    fopen_s(&C, "C.txt", "w");
    fscanf_s(A, "%d", &sum1);
    fscanf_s(B, "%d", &sum2);
    fprintf(C, "%d ", sum1);
    fprintf(C, "\n");
    for (int i = 0; i < r; i++)
    {
        for (int j = 0; j < c; j++)
        {
            fscanf_s(A, "%d", &sum1);
            fscanf_s(B, "%d", &sum2);
            fprintf(C, "%d ", sum1 + sum2);
        }
        fprintf(C, "\n");
    }
    fclose(A);
    fclose(B);
    fclose(C);
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
